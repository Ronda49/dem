name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # 1️⃣ Code Checkout
  code-checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  # 2️⃣ Install Dependencies
  install-dependencies:
    runs-on: ubuntu-latest
    needs: code-checkout
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 black isort pytest httpx
      - uses: actions/upload-artifact@v4
        with:
          name: fastapi-app-source
          path: .
  
  # 3️⃣ Linting and Quality Check
  linting:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: fastapi-app-source
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install linting tools
        run: |
          pip install flake8 black isort
      - name: Lint with flake8
        run: flake8 . --max-line-length=88
      - name: Check formatting with black
        run: black --check .
      - name: Check imports with isort
        run: isort . --check-only

  # 4️⃣ Build
  build:
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: fastapi-app-source
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build tool
        run: pip install build
      - name: Build package
        run: |
          echo "Building Python package..."
          python -m build || echo "No pyproject.toml found, skipping."
      - uses: actions/upload-artifact@v4
        with:
          name: fastapi-app-build
          path: .

  # 5️⃣ Unit Tests
  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: fastapi-app-build
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install test tools
        run: |
          pip install -r requirements.txt
          pip install pytest httpx
      - name: Run pytest
        run: pytest -v

  # 6️⃣ Integration Test
  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: fastapi-app-build
      - name: Integration tests placeholder
        run: echo "Running integration tests..."

  # 7️⃣ Security Scan
  security-scan:
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: fastapi-app-build
      - name: Install Trivy
        run: |
          sudo apt-get update -y
          sudo apt-get install wget -y
          wget https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh
          chmod +x install.sh
          ./install.sh
          sudo mv ./bin/trivy /usr/local/bin/
      - name: Run Trivy scan
        run: trivy fs . || echo "Trivy scan completed with warnings"

  # 8️⃣ Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: security-scan
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: fastapi-app-build
      - name: Deploy to environment
        run: |
          echo "Deploying to environment..."
          # Example:
          # kubectl apply -f deployment.yaml
          # gcloud run deploy my-fastapi-app --source . --region=us-central1
